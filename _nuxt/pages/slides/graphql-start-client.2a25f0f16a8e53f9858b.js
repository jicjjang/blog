webpackJsonp([15],{"9RWM":function(t,s,e){"use strict";var a=function(){var t=this.$createElement;this._self._c;return this._m(0)};a._withStripped=!0;var i={render:a,staticRenderFns:[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"slides"},[e("section",{attrs:{ondblclick:"RevealNotes.open();"}},[e("h2",[t._v("GraphQL 시작하기 2")]),e("h3",[t._v("NHN Bugs")]),e("p",[e("small",[t._v("Created by "),e("a",{attrs:{href:"https://jicjjang.github.io/blog",target:"_blank"}},[t._v("Junseok, Choi")])])]),e("aside",{staticClass:"notes"},[t._v("\n      Client GraphQL 시작하기 발표 시작하겠습니다.\n      이번 발표는 설명 위주 및 간단한 내용이었던 이전 발표와는 조금 다르게\n      예제 위주로 많이 다룰 예정입니다.\n    ")])]),e("section",[e("div",[e("h2",[t._v("순서")]),e("ul",{staticStyle:{"list-style":"none",margin:"0"}},[e("li",{staticClass:"fragment"},[t._v("1. About GraphQL")]),e("li",{staticClass:"fragment"},[t._v("2. Example GraphQL")]),e("li",{staticClass:"fragment"},[t._v("Q & A")])])])]),e("section",[e("h2",[t._v("1. About GraphQL")]),e("div",{staticStyle:{width:"90%",margin:"0 auto"}},[e("div",{staticClass:"fragment",staticStyle:{"font-size":"40px"}},[t._v("Client GraphQL은 필수가 아니다.")]),e("div",{staticClass:"fragment",staticStyle:{"font-size":"40px"}},[t._v("하지만 사용한다면?")])]),e("aside",{staticClass:"notes"},[t._v("\n      1/2"),e("br"),t._v("\n      클라이언트 GraphQL은 앞선 `Server GraphQL`에서도 말했지만 Client GraphQL은 필수가 아닙니다.\n      "),e("br"),t._v("2/2"),e("br"),t._v("\n      하지만, 사용한다면 시너지 효과가 나올 수 있고, Vuex에서 (React는 Redux에서) 데이터 관리를 따로 할 필요 없이\n      설정만 해주면 알아서 Server GraphQL과 연동이 됩니다.\n    ")])]),e("section",[e("section",[e("h2",[t._v("2. Example GraphQL")]),e("div",[e("div",{staticClass:"fragment",staticStyle:{display:"inline-block",width:"35%"}},[e("a",{attrs:{href:"https://github.com/Akryum/vue-apollo"}},[e("img",{attrs:{src:"/blog/static/slides/image/graphql-start/vue-supply.png"}})])]),e("div",{staticClass:"fragment",staticStyle:{display:"inline-block",width:"55%","vertical-align":"top"}},[e("a",{attrs:{href:"https://github.com/Akryum/vue-supply"}},[e("img",{attrs:{src:"/blog/static/slides/image/graphql-start/vue-apollo.png"}})])])]),e("aside",{staticClass:"notes"},[t._v("\n        2/2"),e("br"),t._v("\n        Client GraphQL에서는 vue-apollo와 vue-supply 라이브러리를 사용할 예정입니다.\n        vue-supply는 GraphQL에서 Vuex를 대체하는 용도로 사용합니다.\n        컴포넌트마다 가질 수 있는 props 데이터, 데이터를 주고받는 액션과 이를 적용하는 mutation 같은 기능을 하나로 통합하는 Vuex 대신,\n        GraphQL에서 가져온 데이터를 직접 캐시하고, 이를 사용하게 해줍니다.\n      ")])]),e("section",[e("h2",[t._v("Client GraphQL에 대해서")]),e("div",[e("div",{staticClass:"fragment",staticStyle:{display:"inline-block",width:"40%"}},[e("img",{attrs:{src:"/blog/static/slides/image/graphql-start/apollo-provider.png"}})]),e("div",{staticClass:"fragment"},[e("a",{attrs:{href:"https://github.com/Akryum/vueconf-2017-demo"}},[t._v("Demo project")])])]),e("aside",{staticClass:"notes"},[t._v("\n        이 전 발표 자료에서 GraphQL에 대한 기본적인 설명은 모두 드렸습니다.\n        typedef로의 타입 명시와 resolver로의 구현체를 만들어 적용하면 되는 것이었는데,\n        "),e("br"),t._v("1/2"),e("br"),t._v("\n        Client에서는 apollo-provider를 등록해 줘야 합니다.\n        이후엔 선택적으로 사용하는 vue-supply에 대해 vuex에 캐시를 입히는 부분,\n        vuex의 액션 대신 서버와 데이터를 주고받을 쿼리문 등록 작업을 해주어야 합니다.\n        "),e("br"),t._v("2/2"),e("br"),t._v("\n        조금 더 자세한 내용에 대해서는 데모 프로젝트를 살펴보겠습니다.\n      ")])])]),e("section",[e("section",[e("h1",[t._v("Q & A")])]),e("section",[e("h1",[t._v("끝")]),e("div",[t._v("감사합니다.")])])])])}]};s.a=i},I5CK:function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var a=e("L2sn"),i=e("9RWM"),n=e("VU/8")(a.a,i.a,!1,null,null,null);n.options.__file="pages/slides/graphql-start-client.vue",s.default=n.exports},L2sn:function(t,s,e){"use strict";s.a={name:"graphql-start-client",layout:"slides"}}});